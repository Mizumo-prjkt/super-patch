#!/usr/bin/env python3

import sys
import os
import time
from simple_term_menu import TerminalMenu

# STRINGS
DIR = sys.path[0]
VENV = f"{DIR}/venv"
VERSION = "rolling-python"
BUILD = ""
TARGET_DIR = f"{DIR}/imgbuild"
CACHE = f"{DIR}/cached_proc"
try:
    SUPER_MAP = open(f"{CACHE}/super_map.txt").read
except:
    print() # idk what to say
try:
    SUPER_SIZE = open(f"{CACHE}/super_size.txt").read
except:
    print()
try:
    SUPER_MAIN = open(f"{CACHE}/super_main.txt").read
except:
    print()

# ALWAYS INVOKE THIS WHEN DONE EXTRACTING IMAGES
def refresh_variable():
    try:
        SUPER_MAP = open(f"{CACHE}/super_map.txt").read
    except:
        print("File Null at checking super_map, ERROR REPORT BY PRINTF")
    try:
        SUPER_SIZE = open(f"{CACHE}/super_size.txt").read
    except:
        print("File Null at checking super_size, ERROR REPORT BY PRINTF")
    try:
        SUPER_MAIN = open(f"{CACHE}/super_main.txt").read
    except:
        print("File Null at checking super_main, ERROR REPORT BY PRINTF")
    time.sleep(3)


if os.path.isdir(CACHE):
    print("CACHE DIR ALREADY EXISTS")
else:
    print("Directory does not exist...")
    os.mkdir(CACHE)
    print("There we go...")

os.system('clear')

# diagnose
print(f"""
Verbose Debug:

DIR =  {DIR}
VENV = {VENV}
VERSION = {VERSION}
BUILD =  {BUILD}
TARGET_DIR = {TARGET_DIR}
CACHE = {CACHE}


do comment this side when on prod
""")

time.sleep(5)
os.system('clear')


def disclaimer():
    print("""
Disclaimer Notice

WARNING: This software tool is currently in the development testing phase. 
          Expect unexpected issues or errors to occur during its usage.

IMPORTANT: Before proceeding, ensure you have a stock AP backup readily 
          available in case the flashing process fails.

MANDATORY: Perform a NAND wipe prior to flashing the Super Image file.

RECOMMENDATION: To guarantee a smooth and seamless experience, 
          we strongly advise utilizing the alternative tool 
          developed by Takumi123x: https://github.com/Takumi123x/rou: 
          https://github.com/Takumi123x/rou

ESSENTIAL: Ensure you possess adequate reading comprehension and mental 
          preparedness to handle any unforeseen circumstances that may 
          arise during the process.

CRUCIAL DISCLAIMER: Flashing the Super Image file generated by this 
          script has been confirmed to cause potentially irreversible 
          damage to MediaTek and Spreadtrum/UNISOC devices. Currently, 
          only Qualcomm and Exynos devices have been verified to 
          function properly with this tool.

Proceed with extreme caution and at your own discretion. The author of 
          this software tool assumes no responsibility for any damage 
          caused to your device as a result of its usage. By utilizing 
          this tool, you acknowledge and accept the potential risks 
          involved, particularly for MediaTek and Spreadtrum/UNISOC 
          devices.
""")
    vbresponse = input("Do you agree (Y/N): ")
    if vbresponse == "y" or vbresponse == "Y":
        mainmenu()
        # print("T")
    elif vbresponse == "n" or vbresponse == "N":
        exit()
    else:
        os.system('clear')
        print(f"Wrong response: {vbresponse}")
        print("It should be Y or y or n or N")
        time.sleep(5)
        disclaimer()

def mainmenu():
    os.system('clear')
    menutitle = f"   Super Patch\n  Version: {VERSION} - {BUILD}\n\n Press ESC or Q to quit immediately\n\nThis script modifies super.img file\nfrom samsung to add your own\nGSI of your choice\n\n\nDebug:\nDirectory Core: {DIR}\nImage Dir: {TARGET_DIR}\nCache: {CACHE}\n\n\n"
    items = [ "Extract" ,"Inject" , "Build", "Wiki" , "About", "Leave/Exit" ]
    menu_exit = False

    main_menu = TerminalMenu(
        menu_entries = items,
        title = menutitle,
        cycle_cursor = True,
    )

    while not menu_exit:
        menu_selection = main_menu.show()

        if menu_selection == 0:
            menu_exit = True
            os.system('clear')
            extract_menupage()
        elif menu_selection == 1:
            print("Inject SEL")
        elif menu_selection == 2:
            print("Build SEL")
        elif menu_selection == 3:
            print("Wiki SEL")
        elif menu_selection == 4:
            print("About SEL")
        elif menu_selection == 5 or menu_selection == None:
            menu_exit = True
            os.system('clear')
            print("LEFT")
            quit()


def extract_menupage():
    os.system('clear')
    extract_title = f"    Super-patch\n   EXTRACTION MENU\n\n(Press ESC or Q to abruptly quit, all progress wont be saved (probably))\n\n\n"
    items = [ "< Back", "Extract AP", "Extract super.img.lz4", "Extract super.img only" ]
    menu_exit = False

    main_menu = TerminalMenu(
        menu_entries=items,
        menu_cursor=" ]> ",
        title = extract_title,
        cycle_cursor= False
    )

    while not menu_exit:
        menu_selection = main_menu.show()

        if menu_selection == 0:
            menu_exit = True
            os.system('clear')
            mainmenu()
        elif menu_selection == 1:
            print("Extract AP SEL")
        elif menu_selection == 2:
            print("Extract super.img.lz4")
        elif menu_selection == 3:
            print("Extract super.img only SEL")
        elif menu_selection == None: 
            os.system('clear')
            menu_exit = True
            main_menu()
        




if __name__ == "__main__":
    disclaimer()